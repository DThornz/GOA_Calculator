clear;clc;close all
%% Load Validation Image 1
%{
Image from Figure 1 of:

Parnell A, Swanevelder J. High transvalvular pressure gradients on
intraoperative transesophageal echocardiography after aortic valve
replacement: what does it mean?. HSR Proc Intensive Care Cardiovasc Anesth.
2009;1(4):7-18.

%}

[file,path] =uigetfile('*.*'); % Grab file
im=imread([path file]); % Read image
im=im2gray(im);

%% Adjust image before processing
im2=imadjust(im,[.4 1]);
im3=imgaussfilt(im2,2);
imshow(im3)

%% Create Calibration Scale
im=im3;
[spatialCalibration, units]=calibrate_scale(im);

%% Process Image with Image Segmentor
X = im3;
% Adjust data to span data range.
X = imadjust(X);

% Graph cut
foregroundInd
backgroundInd = [57469 57470 57472 57473 57476 57477 58082 58083 58084 72453 72459 72462 72464 72467 72474 72476 72479 72487 72489 72494 72498 72501 72515 73062 73065 74281 74284 74287 75498 75502 75505 76104 76108 76712 76716 77321 77932 78542 79150 79154 80377 80380 80992 82219 82220 82831 84058 84061 85288 86515 87130 87744 88970 89584 91428 92765 92771 92773 93271 93272 93367 93377 93378 93381 93382 93383 93386 93390 93392 93394 93397 93399 93400 93402 93403 93404 93406 93410 93411 93412 93413 93418 93419 93990 94037 94040 94043 94591 94621 94660 94662 94663 95115 95281 95814 95853 95901 95903 95904 96345 96522 96550 97140 97143 97144 97166 97573 97761 97762 97763 98803 98877 98996 98997 99014 99549 99615 99618 99620 99630 100032 100246 100719 100862 101263 101478 101876 102094 102710 103326 103721 103942 105092 105568 105629 105790 106406 106797 108027 108086 108870 111103 111334 112334 113007 113182 114795 115030 116121 116130 116138 117255 117378 117870 117963 118006 118543 119255 119808 120495 120574 121562 121621 121734 122177 122258 122264 122271 122280 122302 122311 122354 123499 123510 123513 123514 123520 123567 123654 124122 124140 124143 124171 124214 124219 124839 125254 125382 125419 125502 125931 126042 126079 126574 126582 126620 126623 126666 126672 126696 127101 127163 127173 127196 127242 127290 127779 127930 128333 128421 128428 128523 129635 129721 129724 129731 129754 130338 130342 130352 130353 130368 130394 130430 130865 130891 131412 131477 132094 132115 132811 132831 132894 133874 133942 133977 133986 133998 134558 134585 134652 134742 135174 135178 135251 135322 136406 136493 136517 137117 137136 137206 137638 137648 138270 138279 138369 138886 138976 138986 139598 140104 140249 140649 140729 140733 140835 140836 140901 141359 141450 141451 141456 142691 142692 142749 143189 143191 143197 143205 143269 143297 143307 143911 144429 144536 144596 145127 145577 145661 145756 145766 145791 146265 146278 146287 146443 146880 146881 146895 146909 147496 147581 148746 148747 148765 148837 148907 149344 149388 149440 149983 150136 150640 150650 150651 150659 150671 151199 151221 151231 151280 151818 151854 151863 151879 151881 151888 151947 152459 153684 153693 153699 153701 153710 153712 153716 153722 153830 154816 156293 156759 158140 159127 159223 159370 159840 163016 164158 164294 165524 167242 167316 167372 167751 167862 169100 169768 170831 170962 170970 170979 171064 171677 174139 174527 175369 178445 179455 180290 181303 181920 182135 183978 185617 186439 187053 187466 188083 188282 189932 190125 191970 192584 194249 195657 197331 198732 199181 200414 201192 204731 206110 206582 207816 207955 209667 211030 212135 212753 212874 213988 215225 217178 217693 218406 218930 220166 220248 220785 221403 222020 223256 223323 223875 224496 224551 225115 225737 225741 225747 225780 226365 226989 226992 226994 226999 227001 227003 227005 ];
L = superpixels(X,4677);
BW = lazysnapping(X,L,foregroundInd,backgroundInd);

% Flood fill
row = 558;
column = 53;
tolerance = 255;
weightImage = graydiffweight(X, column, row, 'GrayDifferenceCutoff', tolerance);
addedRegion = imsegfmm(weightImage, column, row, 0.01);
BW = BW | addedRegion;

% Flood fill
row = 242;
column = 56;
tolerance = 255;
weightImage = graydiffweight(X, column, row, 'GrayDifferenceCutoff', tolerance);
addedRegion = imsegfmm(weightImage, column, row, 0.01);
BW = BW | addedRegion;

% Flood fill
row = 140;
column = 337;
tolerance = 255;
weightImage = graydiffweight(X, column, row, 'GrayDifferenceCutoff', tolerance);
addedRegion = imsegfmm(weightImage, column, row, 0.01);
BW = BW | addedRegion;

% Flood fill
row = 74;
column = 16;
tolerance = 255;
weightImage = graydiffweight(X, column, row, 'GrayDifferenceCutoff', tolerance);
addedRegion = imsegfmm(weightImage, column, row, 0.01);
BW = BW | addedRegion;

% Flood fill
row = 590;
column = 524;
tolerance = 255;
weightImage = graydiffweight(X, column, row, 'GrayDifferenceCutoff', tolerance);
addedRegion = imsegfmm(weightImage, column, row, 0.01);
BW = BW | addedRegion;

% Flood fill
row = 224;
column = 662;
tolerance = 255;
weightImage = graydiffweight(X, column, row, 'GrayDifferenceCutoff', tolerance);
addedRegion = imsegfmm(weightImage, column, row, 0.01);
BW = BW | addedRegion;

% Close mask with disk
radius = 8;
decomposition = 0;
se = strel('disk', radius, decomposition);
BW = imclose(BW, se);

% Invert mask
BW = imcomplement(BW);

% Create masked image.
maskedImage = X;
maskedImage(~BW) = 0;

%% Overlay original grayscale image with mask (in red)
imshow(im); 
red = cat(3, ones(size(im)), zeros(size(im)), zeros(size(im)));
hold on
h=imshow(red);
% alpha(0.8)
set(h, 'AlphaData', BW)

%% Extract area
% Calculate area of mask region
pixelArea = bwarea(maskedImage);
% Convert area from pixel^2 to mm^2
pixelArea = pixelArea*spatialCalibration^2;
% Report GOA in units of cm^2
fprintf('GOA = %f %s%c \n',pixelArea*.01,'cm',178);
%% Load Validation Image 2
%{
Image from Figure 1 of:

Canty DJ, Kim M, Guha R, Pham T, Royse AG, Errey-Clarke S, Smith JA, Royse
CF. Comparison of Cardiac Output of Both 2-Dimensional and 3-Dimensional
Transesophageal Echocardiography With Transpulmonary Thermodilution During
Cardiac Surgery. J Cardiothorac Vasc Anesth. 2020 Jan;34(1):77-86. doi:
10.1053/j.jvca.2019.06.007. Epub 2019 Jun 13. PMID: 31375406.

%}
[file,path] =uigetfile('*.*'); % Grab file
im=imread([path file]); % Read image
im=im2gray(im);
%% Adjust image before processing
im2=imadjust(im,[.4 1]);
im3=imgaussfilt(im2,2);

%% Create Calibration Scale
[spatialCalibration, units]=calibrate_scale(im);

%% Process Image with Image Segmentor

X = im3;

X = imadjust(X);

% Graph cut
foregroundInd
backgroundInd = [59576 59578 61640 63013 65076 67827 70578 77452 80203 82953 89830 93268 95329 101521 103585 105647 107022 108396 109772 109774 110461 111147 111149 111835 134766 134770 134774 134776 134781 134784 134787 135481 136174 137513 137556 138199 138247 140264 141008 141700 142324 142391 143701 144387 144389 145076 146454 146532 146533 147143 147832 148603 149899 150671 154033 154810 156789 159547 159638 162305 162397 167820 169292 169889 171956 172048 173941 173942 173945 173946 173947 173948 173950 173951 173954 173955 173956 173959 174073 174115 174623 174626 174627 174649 174763 175307 175308 175311 175315 175316 175319 175453 175493 176684 176689 176690 176785 176831 176871 177369 177370 177371 177374 177476 177520 178051 178053 178054 178055 178057 178058 178060 178062 178166 178209 178249 178737 178738 178739 178740 178743 178744 178898 180112 180113 180276 180794 180796 180797 180798 180800 180801 180925 181481 181482 181650 181652 182856 182858 182997 183028 183543 183544 183545 183688 184230 184383 184401 184402 184918 185076 185078 185081 185085 226919 232432 235192 235882 238641 242783 245545 248307 251758 257970 262112 264184 272466 275229 277990 280754 282134 282137 284207 286277 286968 286969 288353 289731 289733 290423 290424 396682 397371 399438 400124 402876 406313 409065 412503 415937 423497 426932 430362 436543 439287 443408 446842 455084 457831 461263 469510 472946 476382 478445 482564 485313 487372 490123 493559 494935 496310 498368 499745 500431 501117 503178 503179 503181 503864 503867 504552 505925 505928 507300 508676 510047 510050 512109 512110 512112 ];
L = superpixels(X,3324);
BW = lazysnapping(X,L,foregroundInd,backgroundInd);

% Invert mask
BW = imcomplement(BW);

% Clear borders
BW = imclearborder(BW);

% Open mask with disk
radius = 18;
decomposition = 0;
se = strel('disk', radius, decomposition);
BW = imopen(BW, se);

% Active contour
iterations = 50;
BW = activecontour(X, BW, iterations, 'Chan-Vese');

% Open mask with disk
radius = 9;
decomposition = 0;
se = strel('disk', radius, decomposition);
BW = imopen(BW, se);

% Clear borders
BW = imclearborder(BW);

% Clear borders
BW = imclearborder(BW);

% Draw ROIs

xPos = [76.3605 75.5244 74.6883 74.2317 73.8456 73.2547 72.6233 71.9620 71.2602 70.3537 69.4471 68.7453 68.1544 67.8387 67.7683 67.7683 67.7683 67.7683 67.7683 67.7683 67.7683 67.7683 67.7683 67.7683 67.7683 67.7683 67.7683 67.7683 67.7683 67.7683 67.7683 67.7683 67.7683 67.7683 67.7683 67.8387 68.1544 68.7453 69.3767 70.0380 70.6693 71.3307 72.0325 73.0095 74.1613 75.1383 75.9105 76.8875 78.1098 79.4024 80.6951 81.9878 83.2805 84.5732 85.8659 87.1585 88.4512 89.7439 90.9661 91.9432 92.7154 93.6924 94.9146 96.1369 97.1139 97.8861 98.7927 99.6993 100.4010 101.0624 101.6937 102.3551 103.0568 104.0339 105.2561 106.4783 107.4554 108.2276 109.2046 110.3564 111.3334 112.1056 113.0826 114.3049 115.5976 116.8902 118.1829 119.4756 120.6979 121.6749 122.3767 123.0380 123.7398 124.7168 125.9390 127.2317 128.5244 129.7466 130.7236 131.4959 132.4024 133.3090 134.0812 135.0582 136.2805 137.5027 138.4797 139.2520 140.1585 141.0651 141.8373 142.8848 144.4227 146.3063 148.2303 150.1139 151.8631 153.8576 156.3321 158.8874 161.3619 163.2860 164.7195 166.0826 167.6910 169.5041 171.1829 172.9322 175.0610 177.1898 178.8686 180.2317 181.5244 182.8171 184.1098 185.4024 186.6951 187.9878 189.2805 190.6436 192.2520 194.0651 195.6735 197.1070 198.7858 200.9851 203.3591 205.2427 206.4715 207.8346 209.6477 211.5718 213.4554 215.0637 216.4973 218.1761 220.3049 222.4337 224.1829 225.8617 227.6749 229.2832 230.6463 231.9390 233.2317 234.5244 235.7466 236.7236 237.4254 238.0163 238.3320 238.4729 238.7886 239.3090 239.6247 239.6951 239.6951 239.6951 239.6951 239.6951 239.6951 239.6951 239.6951 239.6951 239.6951 239.7656 240.0812 240.6721 241.3035 241.8944 242.2805 242.6666 243.2575 243.9593 244.8659 245.7724 246.4742 247.0651 247.4512 247.8373 248.4282 249.0596 249.7209 250.3523 250.9432 251.2588 251.3293 251.3293 251.3997 251.7154 252.2358 252.6220 253.0081 253.5990 254.2303 254.8916 255.5230 256.1843 256.8861 257.8631 259.0854 260.3780 261.6707 262.9634 264.2561 265.6192 267.2276 269.0407 270.6491 272.0122 273.3049 274.5976 275.8902 277.1829 278.4756 279.7683 281.0610 282.3537 283.6463 284.8686 285.8456 286.5474 287.1383 287.5244 287.9105 288.4310 288.7466 288.8171 288.8875 289.2736 290.1098 290.9459 291.3320 291.4024 291.4024 291.4024 291.4024 291.4024 291.4024 291.4024 291.4024 291.4729 291.7886 292.3090 292.6247 292.6951 292.7656 293.0812 293.6017 293.9174 293.9878 293.9878 293.9878 293.9878 293.9878 293.9878 293.9878 293.9878 293.9878 293.9878 293.9878 293.9174 293.6017 293.0812 292.7656 292.6247 292.3090 291.7886 291.4729 291.3320 291.0163 290.4959 290.1802 290.1098 290.1098 290.1098 290.1098 290.1098 290.1098 290.1802 290.5663 291.4729 292.7656 294.3739 296.1871 297.7954 299.1585 300.3808 301.2874 301.6735 301.7439 301.7439 301.7439 301.7439 301.7439 301.7439 301.7439 301.7439 301.7439 301.7439 301.7439 301.7439 301.8143 302.2005 303.1070 304.3293 305.6924 307.3712 309.5000 311.6288 313.3076 314.6707 315.9634 317.1857 318.1627 318.8645 319.5258 320.1571 320.8185 321.4498 322.1112 322.7425 323.3334 323.7195 324.1761 325.0826 326.3049 327.6680 329.2059 330.7034 331.7913 332.8387 334.0610 335.2832 336.2602 336.9620 337.6233 338.3251 339.2317 340.1383 340.8401 341.5014 342.1327 342.7941 343.4254 344.0163 344.4024 344.7886 345.3090 345.6247 345.6951 345.6951 345.6951 345.6951 345.6951 345.6951 345.6247 345.3090 344.7181 344.0868 343.4959 343.1098 342.7236 342.2032 341.8875 341.7466 341.4310 340.9105 340.5244 340.1383 339.6178 339.3021 339.2317 339.2317 339.2317 339.2317 339.2317 339.2317 339.2317 339.2317 339.3021 339.6178 340.2087 340.8401 341.5014 342.2032 343.1802 344.3320 345.2386 345.6951 346.1517 347.0582 348.2805 349.5027 350.4797 351.1815 351.8429 352.5446 353.5217 354.8143 356.4227 358.2358 359.8442 361.2073 362.5000 363.7927 365.0854 366.3780 367.6707 368.9634 370.1857 371.1627 371.9349 372.9119 374.0637 375.0407 375.8129 376.7195 377.6261 378.3279 378.9892 379.6206 380.2819 380.9837 381.8902 382.7968 383.4986 384.0895 384.4052 384.4756 384.4756 384.4756 384.4756 384.4756 384.5460 384.8617 385.3822 385.6979 385.7683 385.7683 385.7683 385.7683 385.7683 385.7683 385.7683 385.7683 385.7683 385.7683 385.7683 385.7683 385.6979 385.3117 384.4756 383.5690 382.8673 382.2059 381.5746 380.9837 380.5976 380.2114 379.6206 378.9892 378.3983 378.0122 377.6261 377.0352 376.4038 375.7425 375.0407 374.1341 373.1571 372.0692 370.6422 369.4200 368.5773 367.6003 366.3780 365.0854 363.7222 362.1843 360.6164 359.2128 357.6449 356.1070 354.7439 353.4512 352.0881 350.4093 348.2101 345.7656 343.5663 341.8171 340.1383 338.3251 336.7168 335.3537 333.9905 332.3822 330.5690 328.8198 326.8253 324.2804 321.2685 317.5013 313.4485 309.6409 306.5350 304.4701 303.0366 301.7439 300.4512 299.1585 297.8659 296.5732 295.2805 293.9878 292.6247 291.0163 289.2032 287.5948 286.2317 284.9390 283.6463 282.4241 281.4471 280.7453 280.0840 279.4526 278.7913 278.0895 277.1125 275.9607 274.9837 274.2114 273.2344 272.0826 271.1761 270.7195 270.3334 269.7425 269.0407 268.1341 267.2276 266.5258 265.8645 265.0922 263.7291 261.5299 258.6993 255.4526 251.9906 248.5391 245.6681 243.4388 242.0352 240.8469 239.3090 237.4254 235.5014 233.4769 231.2372 228.8332 226.8387 225.0895 223.2764 221.4567 219.1465 216.2220 213.6667 211.6422 210.0339 208.6707 207.3076 205.6288 203.2887 200.2128 196.9022 194.2764 192.2520 190.6436 189.2805 187.9878 186.6951 185.3320 183.5828 181.0678 177.9620 174.8157 172.0256 170.0311 168.5976 167.2344 165.5556 163.4268 161.2980 159.6192 158.1857 156.5773 154.7642 153.1558 151.7927 150.5000 149.2073 147.9146 146.5515 144.9432 143.1300 141.5217 140.0177 138.0936 135.6896 133.4499 131.4959 129.8875 128.5244 127.2317 125.9390 124.6463 123.3537 121.9905 120.3822 118.5690 116.9607 115.5976 114.2344 112.6261 110.8129 109.2046 107.7710 106.1627 104.2791 102.3551 100.4010 98.4770 96.5934 94.9851 93.6220 92.3293 91.0366 89.8143 88.8373 88.0651 87.1585 86.2520 85.4797 84.5732 83.6666 82.9648 82.3035 81.6017 80.6247 79.4024 78.1802 77.2032 76.4310 75.4540 74.2317 72.9390 71.6463 70.4241 69.5175 69.1314 69.0610 69.0610 69.0610 69.0610 69.0610 69.0610 69.0610];
yPos = [487.1247 486.7386 485.8320 484.6098 483.3171 482.0948 481.1178 480.3456 479.3686 478.0759 476.5380 475.0405 473.9526 472.9052 471.6829 470.3902 469.0271 467.4188 465.6056 463.9268 462.2480 460.4349 458.8265 457.4634 456.1707 454.8076 453.1993 451.3861 449.7778 448.4146 447.1220 445.8293 444.5366 443.2439 441.9512 440.7290 439.6815 438.5936 437.0962 435.6287 434.5812 433.8090 432.7616 431.2941 429.7966 428.7087 427.6613 426.3686 424.8307 423.3332 422.2453 421.1979 419.9756 418.6829 417.3902 416.0976 414.8049 413.5826 412.6056 411.8334 410.9268 410.0203 409.2480 408.2710 407.0488 405.8265 404.8495 404.0773 403.1003 401.8780 400.5854 399.2927 398.0000 396.7073 395.4146 394.1220 392.7588 391.2209 389.7234 388.6355 387.5881 386.3659 385.0732 383.7805 382.4878 381.1951 379.9024 378.6098 377.3171 376.0244 374.7317 373.5095 372.5325 371.7602 370.7128 369.1749 367.4322 366.1395 365.2968 364.3902 363.4837 362.7819 362.1206 361.4892 360.8279 360.1261 359.2195 358.3834 357.9268 357.5407 356.9498 356.3185 355.7276 355.3415 354.8849 354.0488 353.2126 352.7561 352.3700 351.7791 351.1477 350.5568 350.1707 349.7142 348.8780 348.0419 347.5854 347.1288 346.2927 345.4565 345.0000 344.6139 344.0230 343.3916 342.7303 342.0990 341.4376 340.7358 339.8293 338.8523 337.7644 336.3373 335.1151 334.2724 333.2954 332.1436 331.1666 330.4648 329.8035 329.1017 328.1247 326.9024 325.6098 324.3875 323.4105 322.6383 321.7317 320.8956 320.4390 319.9825 319.0759 317.9241 316.9471 316.1749 315.2683 314.4322 313.9756 313.5191 312.6125 311.3902 310.0976 308.8049 307.4418 305.8334 304.0203 302.4119 301.0488 299.6857 298.0773 296.2642 294.6558 293.2927 292.0000 290.7073 289.4146 288.1220 286.8293 285.5366 284.2439 282.9512 281.7290 280.7520 279.9797 279.0027 277.7805 276.4878 275.1951 273.9024 272.6098 271.3171 270.0244 268.7317 267.4390 266.1463 264.8537 263.5610 262.2683 260.9756 259.6829 258.3902 257.0976 255.8049 254.5122 253.2195 251.8564 250.3185 248.8210 247.8035 247.0718 246.3700 245.3930 244.2412 243.2642 242.5624 241.9010 241.1993 240.2927 239.4565 239.0704 239.0000 239.0704 239.4565 240.2927 241.1993 241.9010 242.6328 243.6503 245.0773 246.2995 247.1422 248.0488 248.9554 249.7276 250.7046 251.9268 253.2195 254.5122 255.8049 257.0976 258.3902 259.6829 260.9756 262.2683 263.5610 264.8537 266.1463 267.4390 268.7317 270.0244 271.3171 272.6098 273.9729 275.6517 277.7805 279.9093 281.5881 282.9512 284.3143 285.9227 287.7358 289.3442 290.7073 292.0000 293.3631 294.9715 296.7846 298.3930 299.7561 301.0488 302.3415 303.6341 304.9268 306.2195 307.5122 308.8753 310.4837 312.2968 313.9052 315.2683 316.5610 317.8537 319.1463 320.4390 321.7317 323.0244 324.3171 325.6098 326.9024 328.1951 329.4878 330.7805 332.0027 332.9797 333.7520 334.6585 335.5651 336.2669 336.9282 337.6300 338.6070 339.8293 341.1220 342.4146 343.7073 345.0000 346.2927 347.5854 348.8780 350.1707 351.4634 352.7561 354.0488 355.3415 356.6341 357.9268 359.1491 360.1261 360.8983 361.8049 362.7114 363.4837 364.4607 365.6829 366.9756 368.1979 369.1749 369.9471 370.9241 372.0759 373.0529 373.7547 374.4160 375.1178 376.0244 376.9310 377.7032 378.6802 379.9024 381.1951 382.4174 383.3944 384.1666 385.1436 386.3659 387.6585 388.9512 390.2439 391.5366 392.8293 394.1924 395.8007 397.5435 398.8361 399.6788 400.6558 401.8780 403.1003 404.0773 404.8495 405.8265 407.0488 408.3415 409.6341 410.9268 412.2195 413.5122 414.7344 415.7114 416.4837 417.4607 418.6829 419.9052 420.8822 421.6544 422.7018 424.2398 426.1233 428.0474 429.9310 431.5393 432.9024 434.1951 435.4878 436.7805 438.0732 439.3659 440.6585 441.9512 443.2439 444.5366 445.8293 447.1220 448.4146 449.7073 451.0000 452.3631 453.9715 455.7846 457.3930 458.6857 459.6627 460.4349 461.4119 462.6341 463.8564 464.8334 465.5352 466.1261 466.5122 466.8983 467.4892 468.1206 468.7114 469.0976 469.4837 470.0041 470.3198 470.4607 470.7764 471.2968 471.6829 472.0690 472.5895 472.9052 473.0460 473.3617 473.9526 474.6544 475.5610 476.4675 477.1693 477.8307 478.4620 479.1233 479.8251 480.8021 482.0244 483.3171 484.6098 485.9024 487.1951 488.4878 489.7805 491.0732 492.3659 493.6585 494.9512 496.2439 497.5366 498.8293 500.1220 501.4146 502.7073 504.0000 505.2927 506.5854 507.8780 509.1707 510.4634 511.7561 513.0488 514.4119 516.0203 517.8334 519.5122 521.1206 522.6180 523.7059 524.7534 525.9756 527.2683 528.5610 529.8537 531.0759 532.0529 532.8251 533.8021 535.0244 536.2466 537.2236 538.0663 539.2886 540.7156 541.7330 542.4648 543.1666 544.1436 545.3659 546.6585 547.9512 549.1735 550.1505 550.8523 551.5136 552.2154 553.1220 554.0285 554.7303 555.4621 556.4091 557.5205 558.2222 558.6788 559.2697 559.9010 560.4919 560.8076 560.9485 561.2642 561.7846 562.1707 562.5568 563.0773 563.4634 563.8495 564.4404 565.0718 565.6627 565.9783 566.0488 566.0488 566.0488 566.0488 566.0488 566.0488 566.0488 566.0488 566.0488 566.0488 566.0488 566.0488 566.0488 565.9783 565.5922 564.7561 563.8495 563.0773 562.1003 560.9485 559.9715 559.1993 558.2222 557.0000 555.7073 554.4851 553.5081 552.7358 551.8293 550.9227 550.1505 549.1735 547.9512 546.7290 545.7520 545.0502 544.3888 543.7575 543.0962 542.4648 541.8739 541.5582 541.4878 541.4174 541.1017 540.5812 540.1951 539.8090 539.2886 538.9729 538.8320 538.5163 537.9959 537.6802 537.6098 537.6098 537.6098 537.6098 537.6098 537.6098 537.6098 537.6098 537.6098 537.6098 537.6098 537.5393 537.2236 536.6327 536.0014 535.4105 535.0948 535.0244 535.0244 535.0244 535.0244 535.0244 535.0244 535.0244 535.0244 534.9540 534.6383 534.1178 533.8021 533.6613 533.3456 532.7547 532.1233 531.4620 530.8307 530.2398 529.9241 529.8537 529.7832 529.4675 528.8767 528.2453 527.5840 526.9526 526.2913 525.5895 524.6125 523.3902 522.1680 521.2614 520.8753 520.7344 520.4188 519.8983 519.5826 519.5122 519.4418 519.1261 518.6056 518.2195 517.8334 517.2425 516.6112 515.9498 515.3185 514.6571 514.0258 513.4349 513.0488 512.6627 512.1422 511.8265 511.7561 511.7561 511.6857 511.3700 510.7791 510.1477 509.4864 508.7142 507.4919 505.9945 504.5909 503.0934 501.8712 501.0285 500.0515 498.8293 497.6070 496.6300 495.9282 495.2669 494.5651 493.5881 492.4363 491.4593 490.6871 489.6396 488.1017 486.2181 484.2941 482.4105 480.8021 479.4390 478.2168 477.3102];
m = size(BW, 1);
n = size(BW, 2);
addedRegion = poly2mask(xPos, yPos, m, n);
BW = BW | addedRegion;

% Active contour
iterations = 150;
BW = activecontour(X, BW, iterations, 'edge');

% Clear borders
BW = imclearborder(BW);

% Fill holes
BW = imfill(BW, 'holes');

% Dilate mask with disk
radius = 6;
decomposition = 0;
se = strel('disk', radius, decomposition);
BW = imdilate(BW, se);

% Invert mask
BW = imcomplement(BW);

% Invert mask
BW = imcomplement(BW);

% Create masked image.
maskedImage = X;
maskedImage(~BW) = 0;

%% Overlay original grayscale image with mask (in red)
% maskedImage(maskedImage>=1)=1;
imshow(im); 
red = cat(3, ones(size(im)), zeros(size(im)), zeros(size(im)));
hold on
h=imshow(red);
set(h, 'AlphaData', BW)
%% Extract area
% Calculate area of mask region
pixelArea = bwarea(maskedImage);
% Convert area from pixel^2 to mm^2
pixelArea = pixelArea*spatialCalibration^2;
% Report GOA in units of cm^2
fprintf('GOA = %f %s%c \n',pixelArea*.01,'cm',178);